//
//  HomeWorker.swift
//  VuduTV
//
//  Created by Mcbook Pro on 02.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieWorkerLogic {
    func fetchTrendingMovies(complition: @escaping ([Title])-> Void)
    func fetchTrendingTv(complition: @escaping ([Title])-> Void)
    func fetchPopular(complition: @escaping ([Title])-> Void)
    func fetchUpcomingMovies(complition: @escaping ([Title])-> Void)
    func fetchTopRated(complition: @escaping ([Title])-> Void)
    
}

final class HomeWorker {
  
    // MARK: - Clean component

    private var api = APICaller.shared
    

    init(apiManager: APICaller) {
        self.api = apiManager
    }
    
}

extension HomeWorker: MovieWorkerLogic {
    // MARK: - Methods
    
    func fetchTrendingMovies(complition: @escaping ([Title]) -> Void) {
        APICaller.shared.getTrendingMovies() { result in
            switch result {
            case .success(let movies):
                complition(movies)
            case .failure(let error):
              print(error)
            }
            
        }
    }
    func fetchTrendingTv(complition: @escaping ([Title]) -> Void) {
        APICaller.shared.getTrendingTVs  { result in
            switch result {
                
            case .success(let movies):
                complition(movies)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
        
    }
    
    func fetchPopular(complition: @escaping ([Title]) -> Void) {
        APICaller.shared.getPopular  { result in
            switch result {
                
            case .success(let movies):
                complition(movies)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
        
    }
    
    func fetchUpcomingMovies(complition: @escaping ([Title]) -> Void) {
        APICaller.shared.getUpcommingMovies  { result in
            switch result {
                
            case .success(let movies):
                complition(movies)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }
    
    func fetchTopRated(complition: @escaping ([Title]) -> Void) {
        APICaller.shared.getTopRated  { result in
            switch result {
                
            case .success(let movies):
                complition(movies)
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
        
    }
    
}
